name: Deploy to Cloud Run

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Update OPENAI_API_KEY in thefullcow
      run: |
        awk -v key="${{ secrets.OPENAI_API_KEY }}" '/^OPENAI_API_KEY=/{print "OPENAI_API_KEY="key; next} 1' thefullcow > temp && mv temp thefullcow

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Load environment variables from .env
      run: |
        cp thefullcow .env
        if [ -f .env ]; then
          set -a
          source .env
          set +a
          echo ".env file sourced successfully."
        else
          echo ".env file does not exist in the root directory."
          exit 1
        fi

    - name: Set additional environment variables
      run: |
        echo "PORT=8080" >> $GITHUB_ENV
        echo "UID=$(id -u)" >> $GITHUB_ENV
        echo "GID=$(id -g)" >> $GITHUB_ENV

    - name: Deploy to Cloud Run
      env:
        GCP_PROJECT: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        for service in $(docker-compose config --services); do
          # Extract the image for the current service from docker-compose config
          # This command filters the docker-compose config output to find the image for the current service
          IMAGE=$(docker-compose config | grep -A 5 "service \"$service\"" | grep "image:" | awk '{print $2}' | head -n 1)
          
          # Debugging: Print the service and its corresponding image
          echo "Deploying service: $service with image: $IMAGE"
          
          # Check if IMAGE is not empty
          if [ -z "$IMAGE" ]; then
            echo "Image for service $service not found."
            continue
          fi
        
          # Deploy to Cloud Run
          gcloud run deploy $service --image $IMAGE --platform managed --region europe-west1 --allow-unauthenticated
        done